@using MyCompanyName.AbpZeroTemplate;

@using System.Globalization
@using MyCompanyName.AbpZeroTemplate.Products
@using MyCompanyName.AbpZeroTemplate.Web.Areas.qlnv.Models.Common.Modals
@using MyCompanyName.AbpZeroTemplate.Web.Areas.qlnv.Models.Products
@model CreateOrEditProductModalViewModel
@using Abp.Extensions
@await Html.PartialAsync("~/Areas/qlnv/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditProduct")) : L("CreateNewProduct")))

<div class="modal-body">
    <div id="ProductInformationsTab">
        <form name="ProductInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
            <input type="hidden" name="id" value="@Model.Product.Id" />
            }

            <div class="form-group m-form__group">
                <label for="UserName">@L("User")</label>
                <div class="input-group">
                    <input class="form-control" id="UserName" name="userName" value="@Model.UserName" type="text" disabled>
                    <div class="input-group-append">
                        <button class="btn btn-primary blue" id="OpenUserLookupTableButton" type="button"><i class="fa fa-search"></i> @L("Pick")</button>
                    </div>
                    <div class="input-group-prepend">
                        <button class="btn btn-danger btn-icon" type="button" id="ClearUserNameButton"><i class="fa fa-times"></i></button>
                    </div>
                </div>
            </div>

            @if (Model.IsEditMode)
            {
            <input class="form-control" id="Product_UserId" value="@Model.Product.UserId" type="text" name="userId" hidden />
            }
            else
            {
            <input class="form-control" id="Product_UserId" value="" type="text" name="userId" hidden />
            }

            <div class="form-group">
                <label for="Product_Name">@L("Name")</label>
                <input class="form-control" id="Product_Name" value="@Model.Product.Name" type="text" name="name" required maxlength="@MyCompanyName.AbpZeroTemplate.Products.ProductConsts.MaxNameLength" minlength="@MyCompanyName.AbpZeroTemplate.Products.ProductConsts.MinNameLength" />
            </div>

            @{
            var selectListType = Html.GetEnumSelectList(typeof(ProductType));
            foreach (var selectOption in selectListType) { selectOption.Text = L("Enum_ProductType_" + selectOption.Value); }
            }
            <div class="form-group m-form__group">
                <label for="Product_Type">@L("Type")</label>
                <select class="form-control m-input m-input--square" name="type" id="Product_Type" asp-for="@Model.Product.Type" asp-items="@selectListType">
                </select>
            </div>

        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/qlnv/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")