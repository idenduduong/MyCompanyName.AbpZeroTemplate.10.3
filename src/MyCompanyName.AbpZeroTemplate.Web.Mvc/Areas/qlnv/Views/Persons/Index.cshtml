@using MyCompanyName.AbpZeroTemplate.Authorization
@using MyCompanyName.AbpZeroTemplate.Web.Areas.qlnv.Startup

@using DevExtreme.AspNet.Mvc
@{
    ViewBag.CurrentPageName = qlnvPageNames.Common.Persons;
}
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <abp-page-subheader title="@L("PhoneBook")" description="@L("PhoneBookInfo")"></abp-page-subheader>

    <div class="@(await GetContainerClass())">
        <div class="col-12">
            <div class="card card-custom gutter-b">
                <div class="card-body">

                    @(Html.DevExtreme()
                        .DataGrid<MyCompanyName.AbpZeroTemplate.Persons.Dtos.PersonListDto>()
                        .ID("gridContainer")
                        .ShowBorders(true)
                        .Paging(paging => paging.PageSize(1))
                        .Pager(pager =>
                        {
                            pager.Visible(true);
                            pager.DisplayMode(GridPagerDisplayMode.Full);
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                            pager.ShowInfo(true);
                            pager.ShowNavigationButtons(true);
                        })
                        .Editing(editing => {
                            editing.Mode(GridEditMode.Row);
                            editing.AllowAdding(true);
                            editing.AllowDeleting(true);
                            editing.AllowUpdating(true);
                        })
                        .DataSource(d => d.Mvc()
                            .Controller("Persons")
                            .LoadAction("Get")
                            .InsertAction("Post")
                            .UpdateAction("Put")
                            .DeleteAction("Delete")
                            .Key("Id")
                        )
                        .Columns(columns =>
                        {
                            columns.AddFor(m => m.Surname); ;

                            columns.AddFor(m => m.Name); ;

                            columns.AddFor(m => m.EmailAddress);
                        })
                    )

                    @Html.AntiForgeryToken()

                    <script>
                        $.ajaxSetup({
                            data: {
                                __RequestVerificationToken: document.getElementsByName("__RequestVerificationToken")[0].value
                            }
                        });
                    </script>

                    @*@(Html.DevExtreme().DataGrid()
                        .ID("gridContainer")
                        .DataSource(d => d
                            .OData()
                            .Url("https://js.devexpress.com/Demos/SalesViewer/odata/DaySaleDtoes")
                            .BeforeSend(@<text>
                                function(request) {
                                    request.params.startDate = "2020-05-10";
                                    request.params.endDate = "2020-05-15";
                                }
                            </text>)
                        )
                        .RemoteOperations(false)
                        .AllowColumnReordering(true)
                        .RowAlternationEnabled(true)
                        .ShowBorders(true)
                        .OnContentReady("contentReady")
                        .Paging(p => p.PageSize(10))
                        .Pager(p => p
                            .ShowPageSizeSelector(true)
                            .AllowedPageSizes(new[] { 10, 25, 50, 100 })
                        )
                        .SearchPanel(s => s
                            .Visible(true)
                            .HighlightCaseSensitive(true)
                        )
                        .GroupPanel(g => g.Visible(true))
                        .Grouping(g => g.AutoExpandAll(false))
                        .Columns(columns => {
                            columns.Add()
                                .DataField("Product")
                                .GroupIndex(0);

                            columns.Add()
                                .DataField("Amount")
                                .Caption("Sale Amount")
                                .DataType(GridColumnDataType.Number)
                                .Format(Format.Currency)
                                .Alignment(HorizontalAlignment.Right);

                            columns.Add()
                                .DataField("Discount")
                                .Caption("Discount %")
                                .DataType(GridColumnDataType.Number)
                                .Format(Format.Percent)
                                .Alignment(HorizontalAlignment.Right)
                                .AllowGrouping(false)
                                .CssClass("bullet")
                                .CellTemplate(@<text>
                                    @(Html.DevExtreme().Bullet()
                                        .Value(new JS("value * 100"))
                                        .Size(s => s
                                            .Height(35)
                                            .Width(150)
                                        )
                                        .Margin(m => m
                                            .Top(5)
                                            .Bottom(0)
                                            .Left(5)
                                        )
                                        .ShowTarget(false)
                                        .ShowZeroLevel(true)
                                        .StartScaleValue(0)
                                        .EndScaleValue(100)
                                        .Tooltip(t => t
                                            .Enabled(true)
                                            .Font(f => f.Size(18))
                                            .PaddingTopBottom(2)
                                            .CustomizeTooltip("customizeTooltip")
                                        )
                                    )
                                </text>);

                            columns.Add()
                                .DataField("SaleDate")
                                .DataType(GridColumnDataType.Date);

                            columns.Add()
                                .DataField("Region")
                                .DataType(GridColumnDataType.String);

                            columns.Add()
                                .DataField("Sector")
                                .DataType(GridColumnDataType.String);

                            columns.Add()
                                .DataField("Channel")
                                .DataType(GridColumnDataType.String);

                            columns.Add()
                                .DataField("Customer")
                                .DataType(GridColumnDataType.String)
                                .Width(150);
                        })
                    )

                    <script>
                        var collapsed = false;
                        function contentReady(e) {
                            if(!collapsed) {
                                collapsed = true;
                                e.component.expandRow(["EnviroCare"]);
                            }
                        }

                        function customizeTooltip(pointsInfo) {
                            return { text: parseInt(pointsInfo.originalValue) + "%" };
                        }
                    </script>*@

                </div>
            </div>
        </div>
    </div>
</div>