@using System.Threading.Tasks
@using MyCompanyName.AbpZeroTemplate.Authorization
@using MyCompanyName.AbpZeroTemplate.Web.Areas.qlnv.Startup
@using MyCompanyName.AbpZeroTemplate.Web.Areas.qlnv.Models.Person

@model MyCompanyName.AbpZeroTemplate.Web.Areas.AppAreaName.Models.Person.IndexViewModel

@{ ViewBag.CurrentPageName = AppAreaNamePageNames.PhoneBook.Demo; }

<!--    datdd   -->

@section Scripts
{
    <script>
        (function () {

            var _createPersonModal = new app.ModalManager({
                viewUrl: abp.appPath + 'AppAreaName/PhoneBook/CreatePersonModal',
                //viewUrl: '/Areas/App/Views/PhoneBook/CreatePersonModal',
                scriptUrl: abp.appPath + 'view-resources/Areas/AppAreaName/Views/PhoneBook/_CreatePersonModal.js',
                modalClass: 'CreatePersonModal'
            });

            $('#CreateNewPersonButton').click(function (e) {
                e.preventDefault();
                _createPersonModal.open();
            });

            var _personService = abp.services.app.person;

            $('#AllPeopleList button.delete-person').click(function (e) {
                e.preventDefault();
                debugger

                var $listItem = $(this).closest('.list-group-item');
                var personId = $listItem.attr('data-person-id');

                abp.message.confirm(
                    app.localize('AreYouSureToDeleteThePerson'),
                    'Delete Person',
                    function (isConfirmed) {
                        if (isConfirmed) {
                            debugger
                            _personService.deletePerson({
                                id: personId
                            }).done(function () {
                                abp.notify.info(app.localize('SuccessfullyDeleted'));
                                $listItem.remove();
                            });
                        }
                    }
                );
            });

            //Edit person button
            $('#AllPeopleList button.edit-person').click(function (e) {
                e.preventDefault();

                var $listItem = $(this).closest('.list-group-item');

                $listItem
                    .toggleClass('person-editing')
                    .siblings().removeClass('person-editing');
            });

            //Save phone button
            $('#AllPeopleList .button-save-phone').click(function (e) {
                e.preventDefault();

                var $phoneEditorRow = $(this).closest('tr');

                abp.ajax({
                    url: abp.appPath + 'AppAreaName/PhoneBook/AddPhone',
                    dataType: 'html',
                    data: JSON.stringify({
                        personId: $phoneEditorRow.closest('.list-group-item').attr('data-person-id'),
                        Type: $phoneEditorRow.find('select[name=Type]').val(),
                        Number: $phoneEditorRow.find('input[name=Number]').val()
                    })
                }).done(function (result) {
                    $(result).insertBefore($phoneEditorRow);
                });
            });

            //Delete phone button
            $('#AllPeopleList').on('click', '.button-delete-phone', function (e) {
                e.preventDefault();

                var $phoneRow = $(this).closest('tr');
                var phoneId = $phoneRow.attr('data-phone-id');

                _personService.deletePhone({
                    id: phoneId
                }).done(function () {
                    abp.notify.success(app.localize('SuccessfullyDeleted'));
                    $phoneRow.remove();
                });
            });

            var _editPersonModal = new app.ModalManager({
                viewUrl: abp.appPath + 'AppAreaName/PhoneBook/EditPersonModal',
                scriptUrl: abp.appPath + 'view-resources/Areas/AppAreaName/Views/PhoneBook/_EditPersonModal.js',
                modalClass: 'EditPersonModal'
            });

            $('#AllPeopleList button.edit-person').click(function (e) {
                e.preventDefault();
                var $listItem = $(this).closest('.list-group-item');
                var id = $listItem.data('person-id');
                _editPersonModal.open({ id: id });
            });
        })();

        (function ($) {
            app.modals.CreatePersonModal = function () {

                var _modalManager;
                var _personService = abp.services.app.person;
                var _$form = null;

                this.init = function (modalManager) {
                    _modalManager = modalManager;

                    //Initialize your modal here...
                    _$form = _modalManager.getModal().find('form');
                    _$form.validate();
                };

                this.save = function () {
                    //Save your modal here...
                    if (!_$form.valid()) {
                        return;
                    }

                    var person = _$form.serializeFormToObject();

                    _modalManager.setBusy(true);
                    _personService.createPerson(person).done(function () {
                        _modalManager.close();
                        location.reload();
                    }).always(function () {
                        _modalManager.setBusy(false);
                    });
                };
            };
        })(jQuery);
    </script>
}

<div class="row kt-margin-b-5">
    <div class="col-xs-6">
        <div class="page-head">
            <div class="page-title">
                <h1>
                    <span>@L("PhoneBook")</span>
                </h1>
            </div>
        </div>
    </div>

    <div class="col-xs-6 text-right">
        @if (IsGranted(AppPermissions.Pages_PhoneBook_CreatePerson))
        {
<button id="CreateNewPersonButton" class="btn btn-primary"><i class="fa fa-plus"></i> @L("CreateNewPerson")</button>}
    </div>
</div>

<div class="portlet light">

    <div class="portlet light">

        <div class="kt-portlet__head">
            <div class="kt-portlet__head-label">
                <h3 class="kt-portlet__head-title">
                    @L("AllPeople") (@Model.Items.Count)
                </h3>
            </div>
            <div class="kt-portlet__head-toolbar">
                <div class="kt-portlet__head-actions">
                    <form action="@Url.Action("Index")" method="GET">
                        <div class="input-group">
                            <input id="FilterPeopleText" name="Filter" value="@Model.Filter" class="form-control"
                                   placeholder="@L(" SearchWithThreeDot")" type="text">
                            <span class="input-group-btn">
                                <button id="FilterPeopleButton" class="btn default btn-success" type="submit">
                                    <i class="la la-search-plus"></i>
                                </button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="portlet-body">

            <h3>@L("AllPeople")</h3>

            <div id="AllPeopleList" class="list-group">
                @foreach (var person in Model.Items)
                {
    <a href="javascript:;" class="list-group-item" data-person-id="@person.Id">
        <h4 class="list-group-item-heading">
            @person.Name @person.Surname

            <span class="person-buttons">
                <button title="@L("Edit")" class="btn btn-circle btn-icon-only green edit-person">
                    <i class="la la-pencil"></i>
                </button>
                @if (IsGranted(AppPermissions.Pages_PhoneBook_DeletePerson))
                {
<button title="@L("Delete")" class="btn btn-circle btn-icon-only red delete-person" href="javascript:;">
    <i class="la la-trash"></i>
</button>}
            </span>
        </h4>
        <p class="list-group-item-text">
            @person.EmailAddress
        </p>
        <div class="table-scrollable table-phones">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th style="width:10%"></th>
                        <th style="width:15%">@L("Type")</th>
                        <th style="width:75%">@L("PhoneNumber")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var phone in person.Phones)
                    {
    @Html.Partial("_PhoneRowInPersonList", new PhoneRowInPersonListViewModel(phone))}
                    <tr>
                        <td>
                            <button class="btn btn-sm green button-save-phone">
                                <i class="la la-floppy-o"></i>
                            </button>
                        </td>
                        <td>
                            <select name="Type">
                                <option value="0">@L("PhoneType_Mobile")</option>
                                <option value="1">@L("PhoneType_Home")</option>
                                <option value="2">@L("PhoneType_Business")</option>
                            </select>
                        </td>
                        <td><input type="text" name="Number" /></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </a>}
            </div>

        </div>
    </div>
    <style>
        #AllPeopleList {
            .list-group-item-heading

        {
            span .person-buttons

        {
            float: right;
        }

        }

        .table-phones {
            display: none;
        }

        .person-editing {
            background-color: #ccffcc;
            h4

        {
            font-weight: bold;
        }

        .table-phones {
            display: table;
        }

        }
        }
    </style>
